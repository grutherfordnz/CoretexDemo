// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleManagementSystem.Infrastructure.DbContexts;

namespace VehicleManagementSystem.Infrastructure.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    partial class VehicleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("vehicle")
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VehicleManagementSystem.Infrastructure.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<double>("EngineTemperature")
                        .HasColumnType("float");

                    b.Property<int>("FuelRemaining")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RadiatorPressure")
                        .HasColumnType("float");

                    b.Property<int>("Speed")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedTimestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("VehicleManagementSystem.Infrastructure.Entities.VehicleLocation", b =>
                {
                    b.Property<Guid>("VehicleLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("VehicleLocationId");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("VehicleLocation");
                });

            modelBuilder.Entity("VehicleManagementSystem.Infrastructure.Entities.VehicleLocation", b =>
                {
                    b.HasOne("VehicleManagementSystem.Infrastructure.Entities.Vehicle", "Vehicle")
                        .WithOne("VehicleLocation")
                        .HasForeignKey("VehicleManagementSystem.Infrastructure.Entities.VehicleLocation", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
